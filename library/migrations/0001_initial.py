# Generated by Django 5.0.3 on 2024-04-10 16:05

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('users', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('birth_date', models.DateField(auto_created=True)),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Comments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField()),
                ('create_date', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Books',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateField(auto_created=True)),
                ('title', models.CharField(max_length=30)),
                ('year', models.PositiveIntegerField()),
                ('description', models.TextField()),
                ('price', models.FloatField()),
                ('count', models.PositiveIntegerField(default=1)),
                ('image', models.ImageField(upload_to='media/book')),
                ('author', models.ManyToManyField(to='library.author')),
            ],
        ),
        migrations.CreateModel(
            name='StudentsBook',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('take_date', models.DateTimeField(auto_now_add=True)),
                ('returned_status', models.BooleanField(default=False)),
                ('books', models.ManyToManyField(to='library.books')),
                ('comments', models.ManyToManyField(blank=True, null=True, to='library.comments')),
                ('student', models.ManyToManyField(to='users.students')),
            ],
        ),
    ]
